// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log/log.proto

package log

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/lyft/protoc-gen-validate/validate"
	_ "go.emailer.com/pb/emailer"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Source int32

const (
	Source_ALL Source = 0
	Source_WEB Source = 1
	Source_API Source = 2
)

var Source_name = map[int32]string{
	0: "ALL",
	1: "WEB",
	2: "API",
}

var Source_value = map[string]int32{
	"ALL": 0,
	"WEB": 1,
	"API": 2,
}

func (x Source) String() string {
	return proto.EnumName(Source_name, int32(x))
}

func (Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{0}
}

type Status int32

const (
	Status_BOTH    Status = 0
	Status_FAILURE Status = 1
	Status_SUCCESS Status = 2
)

var Status_name = map[int32]string{
	0: "BOTH",
	1: "FAILURE",
	2: "SUCCESS",
}

var Status_value = map[string]int32{
	"BOTH":    0,
	"FAILURE": 1,
	"SUCCESS": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{1}
}

type SortBy int32

const (
	SortBy_TIME SortBy = 0
)

var SortBy_name = map[int32]string{
	0: "TIME",
}

var SortBy_value = map[string]int32{
	"TIME": 0,
}

func (x SortBy) String() string {
	return proto.EnumName(SortBy_name, int32(x))
}

func (SortBy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{2}
}

type SortOrder int32

const (
	SortOrder_DESC SortOrder = 0
	SortOrder_ASC  SortOrder = 1
)

var SortOrder_name = map[int32]string{
	0: "DESC",
	1: "ASC",
}

var SortOrder_value = map[string]int32{
	"DESC": 0,
	"ASC":  1,
}

func (x SortOrder) String() string {
	return proto.EnumName(SortOrder_name, int32(x))
}

func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{3}
}

type GetLogRequest struct {
	UserId               string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FromDate             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate               *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Offset               int32                `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Source               Source               `protobuf:"varint,6,opt,name=source,proto3,enum=go.emailer.com.Source" json:"source,omitempty"`
	Status               Status               `protobuf:"varint,7,opt,name=status,proto3,enum=go.emailer.com.Status" json:"status,omitempty"`
	SortBy               SortBy               `protobuf:"varint,8,opt,name=sort_by,json=sortBy,proto3,enum=go.emailer.com.SortBy" json:"sort_by,omitempty"`
	SortOrder            SortOrder            `protobuf:"varint,9,opt,name=sort_order,json=sortOrder,proto3,enum=go.emailer.com.SortOrder" json:"sort_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLogRequest) Reset()         { *m = GetLogRequest{} }
func (m *GetLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogRequest) ProtoMessage()    {}
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{0}
}

func (m *GetLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogRequest.Unmarshal(m, b)
}
func (m *GetLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogRequest.Marshal(b, m, deterministic)
}
func (m *GetLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogRequest.Merge(m, src)
}
func (m *GetLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogRequest.Size(m)
}
func (m *GetLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogRequest proto.InternalMessageInfo

func (m *GetLogRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetLogRequest) GetFromDate() *timestamp.Timestamp {
	if m != nil {
		return m.FromDate
	}
	return nil
}

func (m *GetLogRequest) GetToDate() *timestamp.Timestamp {
	if m != nil {
		return m.ToDate
	}
	return nil
}

func (m *GetLogRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetLogRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetLogRequest) GetSource() Source {
	if m != nil {
		return m.Source
	}
	return Source_ALL
}

func (m *GetLogRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_BOTH
}

func (m *GetLogRequest) GetSortBy() SortBy {
	if m != nil {
		return m.SortBy
	}
	return SortBy_TIME
}

func (m *GetLogRequest) GetSortOrder() SortOrder {
	if m != nil {
		return m.SortOrder
	}
	return SortOrder_DESC
}

type Log struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{1}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type LogList struct {
	Logs                 []*Log   `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogList) Reset()         { *m = LogList{} }
func (m *LogList) String() string { return proto.CompactTextString(m) }
func (*LogList) ProtoMessage()    {}
func (*LogList) Descriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{2}
}

func (m *LogList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogList.Unmarshal(m, b)
}
func (m *LogList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogList.Marshal(b, m, deterministic)
}
func (m *LogList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogList.Merge(m, src)
}
func (m *LogList) XXX_Size() int {
	return xxx_messageInfo_LogList.Size(m)
}
func (m *LogList) XXX_DiscardUnknown() {
	xxx_messageInfo_LogList.DiscardUnknown(m)
}

var xxx_messageInfo_LogList proto.InternalMessageInfo

func (m *LogList) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *LogList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_41e0d72543c57a28, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("go.emailer.com.Source", Source_name, Source_value)
	proto.RegisterEnum("go.emailer.com.Status", Status_name, Status_value)
	proto.RegisterEnum("go.emailer.com.SortBy", SortBy_name, SortBy_value)
	proto.RegisterEnum("go.emailer.com.SortOrder", SortOrder_name, SortOrder_value)
	proto.RegisterType((*GetLogRequest)(nil), "go.emailer.com.GetLogRequest")
	proto.RegisterType((*Log)(nil), "go.emailer.com.Log")
	proto.RegisterType((*LogList)(nil), "go.emailer.com.LogList")
	proto.RegisterType((*Response)(nil), "go.emailer.com.Response")
}

func init() { proto.RegisterFile("log/log.proto", fileDescriptor_41e0d72543c57a28) }

var fileDescriptor_41e0d72543c57a28 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xae, 0xed, 0xc4, 0x8e, 0x27, 0x6a, 0x64, 0xed, 0xef, 0x47, 0x6b, 0x22, 0x01, 0x91, 0x39,
	0x10, 0x45, 0xc8, 0xae, 0xd2, 0x03, 0x88, 0x5b, 0x9c, 0x06, 0x1a, 0xc9, 0xa8, 0x95, 0x9d, 0x0a,
	0x89, 0x4b, 0xe4, 0x24, 0x1b, 0x63, 0x61, 0x77, 0x82, 0x77, 0x1d, 0xa9, 0x57, 0x1e, 0x83, 0x47,
	0xe1, 0xc4, 0xeb, 0x94, 0x27, 0xe0, 0x88, 0x76, 0x1d, 0x23, 0x25, 0xa2, 0xe2, 0xe4, 0x99, 0xf9,
	0xbe, 0x6f, 0xe7, 0xaf, 0xe1, 0x38, 0xc3, 0xc4, 0xcb, 0x30, 0x71, 0x37, 0x05, 0x72, 0x24, 0x9d,
	0x04, 0x5d, 0x9a, 0xc7, 0x69, 0x46, 0x0b, 0x77, 0x89, 0x79, 0xf7, 0x59, 0x82, 0x98, 0x64, 0xd4,
	0x93, 0xe8, 0xa2, 0x5c, 0x7b, 0x3c, 0xcd, 0x29, 0xe3, 0x71, 0xbe, 0xa9, 0x04, 0xdd, 0xd3, 0x6d,
	0x9c, 0xa5, 0xab, 0x98, 0x53, 0xaf, 0x36, 0x76, 0x40, 0x7b, 0xf9, 0x29, 0xfe, 0x5c, 0x56, 0x8e,
	0xf3, 0x4d, 0x83, 0xe3, 0x77, 0x94, 0x07, 0x98, 0x84, 0xf4, 0x4b, 0x49, 0x19, 0x27, 0x0e, 0x18,
	0x25, 0xa3, 0xc5, 0x3c, 0x5d, 0xd9, 0x4a, 0x4f, 0xe9, 0x9b, 0xbe, 0xf9, 0xfd, 0xfe, 0x87, 0xd6,
	0x28, 0x54, 0x4b, 0x09, 0x75, 0x81, 0x4c, 0x57, 0xe4, 0x15, 0x98, 0xeb, 0x02, 0xf3, 0xb9, 0x78,
	0xd5, 0x56, 0x7b, 0x4a, 0xbf, 0x3d, 0xec, 0xba, 0x55, 0x41, 0x6e, 0x5d, 0x90, 0x3b, 0xab, 0x0b,
	0x0a, 0x5b, 0x82, 0x7c, 0x11, 0x73, 0x4a, 0xce, 0xc1, 0xe0, 0x58, 0xc9, 0xb4, 0x7f, 0xca, 0x74,
	0x8e, 0x52, 0x74, 0x02, 0x3a, 0xae, 0xd7, 0x8c, 0x72, 0xbb, 0xd1, 0x53, 0xfa, 0xcd, 0x70, 0xe7,
	0x91, 0xff, 0xa1, 0x99, 0xa5, 0x79, 0xca, 0xed, 0xa6, 0x0c, 0x57, 0x0e, 0x71, 0x41, 0x67, 0x58,
	0x16, 0x4b, 0x6a, 0xeb, 0x3d, 0xa5, 0xdf, 0x19, 0x9e, 0xb8, 0xfb, 0x93, 0x73, 0x23, 0x89, 0x86,
	0x3b, 0x96, 0xe4, 0xf3, 0x98, 0x97, 0xcc, 0x36, 0x1e, 0xe0, 0x4b, 0x34, 0xdc, 0xb1, 0x88, 0x07,
	0x06, 0xc3, 0x82, 0xcf, 0x17, 0x77, 0x76, 0xeb, 0xa1, 0x04, 0x05, 0xf7, 0xef, 0x44, 0x02, 0xf1,
	0x25, 0xaf, 0x01, 0xa4, 0x00, 0x8b, 0x15, 0x2d, 0x6c, 0x53, 0x6a, 0x1e, 0xff, 0x4d, 0x73, 0x25,
	0x08, 0xa1, 0xc9, 0x6a, 0xd3, 0x71, 0x40, 0x0b, 0x30, 0x21, 0x1d, 0x50, 0xeb, 0x65, 0x84, 0x6a,
	0xba, 0x7a, 0xd3, 0xfe, 0x75, 0x7f, 0xa6, 0x7c, 0xfd, 0x79, 0xa6, 0xa5, 0xb7, 0x5b, 0xe7, 0x12,
	0x8c, 0x00, 0x93, 0x20, 0x65, 0x9c, 0xbc, 0x80, 0x46, 0x86, 0x09, 0xb3, 0x95, 0x9e, 0xd6, 0x6f,
	0x0f, 0xff, 0x3b, 0x4c, 0x21, 0x76, 0x2c, 0x09, 0x62, 0x70, 0x1c, 0x79, 0x9c, 0xc9, 0xd5, 0x69,
	0x61, 0xe5, 0x38, 0x00, 0xad, 0x90, 0xb2, 0x0d, 0xde, 0x32, 0x3a, 0x78, 0x0e, 0x7a, 0x35, 0x26,
	0x62, 0x80, 0x36, 0x0a, 0x02, 0xeb, 0x48, 0x18, 0x1f, 0x26, 0xbe, 0xa5, 0xc8, 0xc8, 0xf5, 0xd4,
	0x52, 0x07, 0x2f, 0x41, 0xaf, 0x66, 0x43, 0x5a, 0xd0, 0xf0, 0xaf, 0x66, 0x97, 0xd6, 0x11, 0x69,
	0x83, 0xf1, 0x76, 0x34, 0x0d, 0x6e, 0xc2, 0x89, 0xa5, 0x08, 0x27, 0xba, 0x19, 0x8f, 0x27, 0x51,
	0x64, 0xa9, 0x03, 0x22, 0x9e, 0x94, 0x03, 0x69, 0x41, 0x63, 0x36, 0x7d, 0x3f, 0xb1, 0x8e, 0x06,
	0x4f, 0xc1, 0xfc, 0xd3, 0xb8, 0x08, 0x5f, 0x4c, 0xa2, 0x71, 0x95, 0x6a, 0x14, 0x8d, 0x2d, 0x65,
	0x78, 0x0d, 0x10, 0x60, 0x12, 0xd1, 0x62, 0x9b, 0x2e, 0x29, 0xf1, 0xc1, 0xa8, 0x4e, 0x95, 0x91,
	0x27, 0x87, 0xcd, 0xed, 0xdd, 0x70, 0xd7, 0x3e, 0x84, 0xeb, 0xc6, 0xfc, 0xd3, 0x8f, 0x8f, 0xf6,
	0x21, 0x6f, 0xb3, 0x10, 0x7f, 0xd9, 0x42, 0x97, 0x07, 0x78, 0xfe, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0xef, 0xc4, 0xb8, 0x3a, 0x77, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogServiceClient is the client API for LogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogServiceClient interface {
	GetLogs(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*Response, error)
}

type logServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogServiceClient(cc *grpc.ClientConn) LogServiceClient {
	return &logServiceClient{cc}
}

func (c *logServiceClient) GetLogs(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/go.emailer.com.LogService/GetLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServiceServer is the server API for LogService service.
type LogServiceServer interface {
	GetLogs(context.Context, *GetLogRequest) (*Response, error)
}

func RegisterLogServiceServer(s *grpc.Server, srv LogServiceServer) {
	s.RegisterService(&_LogService_serviceDesc, srv)
}

func _LogService_GetLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).GetLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.LogService/GetLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).GetLogs(ctx, req.(*GetLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.emailer.com.LogService",
	HandlerType: (*LogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLogs",
			Handler:    _LogService_GetLogs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "log/log.proto",
}
