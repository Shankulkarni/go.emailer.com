// Code generated by protoc-gen-go. DO NOT EDIT.
// source: card/card.proto

package card

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/lyft/protoc-gen-validate/validate"
	_ "go.emailer.com/pb/emailer"
	user "go.emailer.com/pb/user"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserCardInformation struct {
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	GatewayId            int32    `protobuf:"varint,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	CustomerId           string   `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Cards                []*Card  `protobuf:"bytes,4,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCardInformation) Reset()         { *m = UserCardInformation{} }
func (m *UserCardInformation) String() string { return proto.CompactTextString(m) }
func (*UserCardInformation) ProtoMessage()    {}
func (*UserCardInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{0}
}

func (m *UserCardInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCardInformation.Unmarshal(m, b)
}
func (m *UserCardInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCardInformation.Marshal(b, m, deterministic)
}
func (m *UserCardInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCardInformation.Merge(m, src)
}
func (m *UserCardInformation) XXX_Size() int {
	return xxx_messageInfo_UserCardInformation.Size(m)
}
func (m *UserCardInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCardInformation.DiscardUnknown(m)
}

var xxx_messageInfo_UserCardInformation proto.InternalMessageInfo

func (m *UserCardInformation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserCardInformation) GetGatewayId() int32 {
	if m != nil {
		return m.GatewayId
	}
	return 0
}

func (m *UserCardInformation) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *UserCardInformation) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	Id                   string            `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	CardId               string            `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	CardType             string            `protobuf:"bytes,2,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	LastFour             string            `protobuf:"bytes,3,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Email                string            `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	ExpireOn             string            `protobuf:"bytes,6,opt,name=expire_on,json=expireOn,proto3" json:"expire_on,omitempty"`
	Address              *user.Address     `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	IsDefault            bool              `protobuf:"varint,8,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{1}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Card) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *Card) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Card) GetLastFour() string {
	if m != nil {
		return m.LastFour
	}
	return ""
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Card) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Card) GetExpireOn() string {
	if m != nil {
		return m.ExpireOn
	}
	return ""
}

func (m *Card) GetAddress() *user.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Card) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *Card) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type UserCardList struct {
	UserCards            []*UserCardInformation `protobuf:"bytes,1,rep,name=user_cards,json=userCards,proto3" json:"user_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UserCardList) Reset()         { *m = UserCardList{} }
func (m *UserCardList) String() string { return proto.CompactTextString(m) }
func (*UserCardList) ProtoMessage()    {}
func (*UserCardList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{2}
}

func (m *UserCardList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCardList.Unmarshal(m, b)
}
func (m *UserCardList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCardList.Marshal(b, m, deterministic)
}
func (m *UserCardList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCardList.Merge(m, src)
}
func (m *UserCardList) XXX_Size() int {
	return xxx_messageInfo_UserCardList.Size(m)
}
func (m *UserCardList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCardList.DiscardUnknown(m)
}

var xxx_messageInfo_UserCardList proto.InternalMessageInfo

func (m *UserCardList) GetUserCards() []*UserCardInformation {
	if m != nil {
		return m.UserCards
	}
	return nil
}

type CardIdentifier struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CardId               string   `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	GatewayId            int32    `protobuf:"varint,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardIdentifier) Reset()         { *m = CardIdentifier{} }
func (m *CardIdentifier) String() string { return proto.CompactTextString(m) }
func (*CardIdentifier) ProtoMessage()    {}
func (*CardIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{3}
}

func (m *CardIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardIdentifier.Unmarshal(m, b)
}
func (m *CardIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardIdentifier.Marshal(b, m, deterministic)
}
func (m *CardIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardIdentifier.Merge(m, src)
}
func (m *CardIdentifier) XXX_Size() int {
	return xxx_messageInfo_CardIdentifier.Size(m)
}
func (m *CardIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_CardIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_CardIdentifier proto.InternalMessageInfo

func (m *CardIdentifier) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CardIdentifier) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *CardIdentifier) GetGatewayId() int32 {
	if m != nil {
		return m.GatewayId
	}
	return 0
}

type AddCardReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GatewayId            int32    `protobuf:"varint,2,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCardReq) Reset()         { *m = AddCardReq{} }
func (m *AddCardReq) String() string { return proto.CompactTextString(m) }
func (*AddCardReq) ProtoMessage()    {}
func (*AddCardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{4}
}

func (m *AddCardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCardReq.Unmarshal(m, b)
}
func (m *AddCardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCardReq.Marshal(b, m, deterministic)
}
func (m *AddCardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCardReq.Merge(m, src)
}
func (m *AddCardReq) XXX_Size() int {
	return xxx_messageInfo_AddCardReq.Size(m)
}
func (m *AddCardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCardReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddCardReq proto.InternalMessageInfo

func (m *AddCardReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddCardReq) GetGatewayId() int32 {
	if m != nil {
		return m.GatewayId
	}
	return 0
}

func (m *AddCardReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UpdateCardReq struct {
	Base                 *CardIdentifier `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Token                string          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateCardReq) Reset()         { *m = UpdateCardReq{} }
func (m *UpdateCardReq) String() string { return proto.CompactTextString(m) }
func (*UpdateCardReq) ProtoMessage()    {}
func (*UpdateCardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{5}
}

func (m *UpdateCardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCardReq.Unmarshal(m, b)
}
func (m *UpdateCardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCardReq.Marshal(b, m, deterministic)
}
func (m *UpdateCardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCardReq.Merge(m, src)
}
func (m *UpdateCardReq) XXX_Size() int {
	return xxx_messageInfo_UpdateCardReq.Size(m)
}
func (m *UpdateCardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCardReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCardReq proto.InternalMessageInfo

func (m *UpdateCardReq) GetBase() *CardIdentifier {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *UpdateCardReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UpdateCardRes struct {
	CardId               string   `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCardRes) Reset()         { *m = UpdateCardRes{} }
func (m *UpdateCardRes) String() string { return proto.CompactTextString(m) }
func (*UpdateCardRes) ProtoMessage()    {}
func (*UpdateCardRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7dec10345ee97c7, []int{6}
}

func (m *UpdateCardRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCardRes.Unmarshal(m, b)
}
func (m *UpdateCardRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCardRes.Marshal(b, m, deterministic)
}
func (m *UpdateCardRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCardRes.Merge(m, src)
}
func (m *UpdateCardRes) XXX_Size() int {
	return xxx_messageInfo_UpdateCardRes.Size(m)
}
func (m *UpdateCardRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCardRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCardRes proto.InternalMessageInfo

func (m *UpdateCardRes) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func init() {
	proto.RegisterType((*UserCardInformation)(nil), "go.emailer.com.UserCardInformation")
	proto.RegisterType((*Card)(nil), "go.emailer.com.Card")
	proto.RegisterMapType((map[string]string)(nil), "go.emailer.com.Card.MetadataEntry")
	proto.RegisterType((*UserCardList)(nil), "go.emailer.com.UserCardList")
	proto.RegisterType((*CardIdentifier)(nil), "go.emailer.com.CardIdentifier")
	proto.RegisterType((*AddCardReq)(nil), "go.emailer.com.AddCardReq")
	proto.RegisterType((*UpdateCardReq)(nil), "go.emailer.com.UpdateCardReq")
	proto.RegisterType((*UpdateCardRes)(nil), "go.emailer.com.UpdateCardRes")
}

func init() { proto.RegisterFile("card/card.proto", fileDescriptor_c7dec10345ee97c7) }

var fileDescriptor_c7dec10345ee97c7 = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcb, 0x6e, 0xdb, 0x38,
	0x14, 0xb5, 0x24, 0xbf, 0x74, 0x3d, 0x79, 0x0c, 0x27, 0x48, 0x04, 0x67, 0x32, 0x63, 0xa8, 0x8b,
	0x1a, 0x5d, 0xc8, 0x81, 0xbb, 0x69, 0x53, 0xa0, 0x40, 0x9c, 0x47, 0x61, 0x20, 0x41, 0x00, 0xb5,
	0xd9, 0x74, 0x63, 0xd0, 0x26, 0xed, 0x08, 0xd1, 0xab, 0x24, 0x95, 0xd4, 0xdb, 0xae, 0xbb, 0xe8,
	0x57, 0xf4, 0x23, 0xba, 0xea, 0xef, 0xa4, 0x5f, 0x50, 0x74, 0x55, 0x90, 0x94, 0x92, 0xd8, 0x71,
	0x9a, 0x02, 0xdd, 0x08, 0xe4, 0x3d, 0x97, 0xf7, 0x1e, 0x1e, 0x1e, 0x52, 0xb0, 0x32, 0xc2, 0x8c,
	0x74, 0xe4, 0xc7, 0x4b, 0x59, 0x22, 0x12, 0xb4, 0x3c, 0x49, 0x3c, 0x1a, 0xe1, 0x20, 0xa4, 0xcc,
	0x1b, 0x25, 0x51, 0x73, 0x73, 0x92, 0x24, 0x93, 0x90, 0x76, 0x14, 0x3a, 0xcc, 0xc6, 0x1d, 0x1a,
	0xa5, 0x62, 0xaa, 0x93, 0x9b, 0x2b, 0x19, 0xa7, 0xac, 0x23, 0x3f, 0x79, 0x60, 0xe3, 0x02, 0x87,
	0x01, 0xc1, 0x82, 0x76, 0x8a, 0x41, 0x0e, 0x34, 0x46, 0x67, 0xf8, 0x3c, 0xd3, 0x13, 0xf7, 0xb3,
	0x01, 0xff, 0x9c, 0x72, 0xca, 0xf6, 0x30, 0x23, 0xfd, 0x78, 0x9c, 0xb0, 0x08, 0x8b, 0x20, 0x89,
	0xd1, 0x32, 0x98, 0x01, 0x71, 0x2a, 0x2d, 0xa3, 0x6d, 0xfb, 0x66, 0x40, 0xd0, 0x16, 0xc0, 0x04,
	0x0b, 0x7a, 0x89, 0xa7, 0x83, 0x80, 0x38, 0x46, 0xcb, 0x68, 0x57, 0x7c, 0x3b, 0x8f, 0xf4, 0x09,
	0x7a, 0x0c, 0x8d, 0x51, 0xc6, 0x45, 0x12, 0x51, 0x26, 0x71, 0x53, 0xae, 0xeb, 0x55, 0x7f, 0x5c,
	0x6d, 0x9b, 0xab, 0x86, 0x0f, 0x05, 0xd4, 0x27, 0xe8, 0x09, 0x54, 0xe4, 0x0e, 0xb9, 0x53, 0x6e,
	0x59, 0xed, 0x46, 0x77, 0xcd, 0x9b, 0xdd, 0xa3, 0x27, 0x79, 0xf8, 0x3a, 0x65, 0xa7, 0xf1, 0xfd,
	0x6a, 0xdb, 0xf8, 0xf0, 0x6d, 0xdb, 0x1a, 0x31, 0xe2, 0x7e, 0xb2, 0xa0, 0x2c, 0xc1, 0x9c, 0x19,
	0x5c, 0x33, 0xdb, 0x80, 0x9a, 0x4c, 0x2f, 0x68, 0xd9, 0x7e, 0x55, 0x4e, 0xfb, 0x04, 0x6d, 0x82,
	0xad, 0x00, 0x31, 0x4d, 0xa9, 0x66, 0xe4, 0xd7, 0x65, 0xe0, 0xcd, 0x34, 0xa5, 0x12, 0x0c, 0x31,
	0x17, 0x83, 0x71, 0x92, 0x31, 0xc7, 0xd2, 0xa0, 0x0c, 0x1c, 0x26, 0x19, 0x43, 0x08, 0xca, 0x31,
	0x8e, 0xa8, 0x53, 0x56, 0x71, 0x35, 0x46, 0x6b, 0x50, 0x51, 0x3c, 0x73, 0x4d, 0xf4, 0x44, 0x96,
	0xa1, 0xef, 0xd3, 0x80, 0xd1, 0x41, 0x12, 0x3b, 0x55, 0x5d, 0x46, 0x07, 0x4e, 0x62, 0xf4, 0x1c,
	0x6a, 0x98, 0x10, 0x46, 0x39, 0x77, 0x6a, 0x2d, 0xa3, 0xdd, 0xe8, 0x6e, 0xcc, 0xef, 0x76, 0x57,
	0xc3, 0x5a, 0xa9, 0xba, 0xe1, 0x17, 0xf9, 0x52, 0xee, 0x80, 0x0f, 0x08, 0x1d, 0xe3, 0x2c, 0x14,
	0x4e, 0xbd, 0x65, 0xb4, 0xeb, 0xbe, 0x1d, 0xf0, 0x7d, 0x1d, 0x40, 0x2f, 0xa1, 0x1e, 0x51, 0x81,
	0x09, 0x16, 0xd8, 0xb1, 0x95, 0x90, 0xee, 0x22, 0x21, 0xbd, 0xe3, 0x3c, 0xe9, 0x20, 0x16, 0x6c,
	0xea, 0x5f, 0xaf, 0x69, 0xbe, 0x80, 0xa5, 0x19, 0x08, 0xad, 0x82, 0x75, 0x4e, 0xa7, 0xb9, 0x80,
	0x72, 0x28, 0xf7, 0x7b, 0x81, 0xc3, 0xac, 0x50, 0x4e, 0x4f, 0x76, 0xcc, 0x67, 0xc6, 0x4e, 0x4d,
	0x1d, 0x09, 0xc9, 0x5c, 0x1f, 0xfe, 0x2a, 0xac, 0x73, 0x14, 0x70, 0x81, 0x7a, 0x00, 0xd2, 0x7f,
	0x03, 0x7d, 0xc0, 0x86, 0xe2, 0xf5, 0x68, 0x9e, 0xd7, 0x02, 0xb3, 0xf9, 0x76, 0x96, 0x07, 0xb9,
	0x7b, 0x09, 0xcb, 0x0a, 0x25, 0x34, 0x16, 0xc1, 0x38, 0xa0, 0x0c, 0xb9, 0x50, 0x53, 0x55, 0x8b,
	0xf3, 0xed, 0xd9, 0x5f, 0xae, 0xbe, 0x5a, 0x65, 0x26, 0x9d, 0x55, 0x95, 0x48, 0x9f, 0xc8, 0x9c,
	0xc2, 0x03, 0xe6, 0x9d, 0x9c, 0xdc, 0x0e, 0xb3, 0x0e, 0xb6, 0xe6, 0x1c, 0xec, 0xa6, 0x00, 0xbb,
	0x84, 0x28, 0xfb, 0xd1, 0x77, 0xbf, 0xd5, 0x74, 0xb6, 0xa0, 0x39, 0x7f, 0x25, 0xfe, 0x87, 0x8a,
	0x48, 0xce, 0x69, 0xac, 0xdd, 0x75, 0xbb, 0x80, 0x8e, 0xbb, 0x04, 0x96, 0x4e, 0x53, 0x79, 0x2f,
	0x8b, 0xa6, 0x5d, 0x28, 0x0f, 0x31, 0xa7, 0xaa, 0x63, 0xa3, 0xfb, 0xdf, 0xa2, 0x13, 0xbd, 0xd1,
	0xc5, 0x57, 0xb9, 0x37, 0x5d, 0xcc, 0x7b, 0xba, 0xb4, 0x67, 0xbb, 0xf0, 0x7b, 0xef, 0x4b, 0xf7,
	0xa3, 0x05, 0x0d, 0x99, 0xf4, 0x9a, 0xb2, 0x8b, 0x60, 0x44, 0xd1, 0x2b, 0xa8, 0xe5, 0x8a, 0xa0,
	0xe6, 0x02, 0xe3, 0xe6, 0xac, 0x9b, 0x0f, 0xf0, 0x74, 0x4b, 0xe8, 0x08, 0xe0, 0x86, 0x02, 0xda,
	0xba, 0xe3, 0x88, 0xdb, 0x22, 0x34, 0x7f, 0x09, 0x73, 0xb7, 0x84, 0x0e, 0x01, 0xf6, 0x69, 0x48,
	0xf3, 0x6a, 0x0f, 0x74, 0x6f, 0xae, 0x7b, 0xfa, 0xd1, 0xf4, 0x8a, 0x47, 0xd3, 0x3b, 0x90, 0x8f,
	0xa6, 0x5b, 0x42, 0x27, 0xb0, 0x24, 0x5d, 0x5b, 0xf8, 0x91, 0xdf, 0x2d, 0x75, 0xaa, 0xce, 0xf9,
	0xba, 0xd4, 0xbf, 0xf7, 0x59, 0x59, 0x96, 0x71, 0x4b, 0xe8, 0x18, 0xfe, 0xde, 0x3b, 0xc3, 0xf1,
	0x84, 0xe6, 0xb7, 0xf4, 0xcf, 0xf8, 0xf5, 0x9c, 0xb7, 0xeb, 0xb3, 0x4b, 0x3b, 0xe9, 0x50, 0xfd,
	0x1d, 0x86, 0x55, 0x95, 0xfb, 0xf4, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xb0, 0xd1, 0xe9,
	0x31, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CardServiceClient is the client API for CardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardServiceClient interface {
	AddCard(ctx context.Context, in *AddCardReq, opts ...grpc.CallOption) (*CardIdentifier, error)
	UpdateCard(ctx context.Context, in *UpdateCardReq, opts ...grpc.CallOption) (*UpdateCardRes, error)
	DeleteCard(ctx context.Context, in *CardIdentifier, opts ...grpc.CallOption) (*empty.Empty, error)
	ListUserCards(ctx context.Context, in *user.UserIdentifier, opts ...grpc.CallOption) (*UserCardList, error)
	ChangeDefaultCard(ctx context.Context, in *CardIdentifier, opts ...grpc.CallOption) (*empty.Empty, error)
}

type cardServiceClient struct {
	cc *grpc.ClientConn
}

func NewCardServiceClient(cc *grpc.ClientConn) CardServiceClient {
	return &cardServiceClient{cc}
}

func (c *cardServiceClient) AddCard(ctx context.Context, in *AddCardReq, opts ...grpc.CallOption) (*CardIdentifier, error) {
	out := new(CardIdentifier)
	err := c.cc.Invoke(ctx, "/go.emailer.com.CardService/AddCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardServiceClient) UpdateCard(ctx context.Context, in *UpdateCardReq, opts ...grpc.CallOption) (*UpdateCardRes, error) {
	out := new(UpdateCardRes)
	err := c.cc.Invoke(ctx, "/go.emailer.com.CardService/UpdateCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardServiceClient) DeleteCard(ctx context.Context, in *CardIdentifier, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/go.emailer.com.CardService/DeleteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardServiceClient) ListUserCards(ctx context.Context, in *user.UserIdentifier, opts ...grpc.CallOption) (*UserCardList, error) {
	out := new(UserCardList)
	err := c.cc.Invoke(ctx, "/go.emailer.com.CardService/ListUserCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardServiceClient) ChangeDefaultCard(ctx context.Context, in *CardIdentifier, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/go.emailer.com.CardService/ChangeDefaultCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardServiceServer is the server API for CardService service.
type CardServiceServer interface {
	AddCard(context.Context, *AddCardReq) (*CardIdentifier, error)
	UpdateCard(context.Context, *UpdateCardReq) (*UpdateCardRes, error)
	DeleteCard(context.Context, *CardIdentifier) (*empty.Empty, error)
	ListUserCards(context.Context, *user.UserIdentifier) (*UserCardList, error)
	ChangeDefaultCard(context.Context, *CardIdentifier) (*empty.Empty, error)
}

func RegisterCardServiceServer(s *grpc.Server, srv CardServiceServer) {
	s.RegisterService(&_CardService_serviceDesc, srv)
}

func _CardService_AddCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).AddCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.CardService/AddCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).AddCard(ctx, req.(*AddCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardService_UpdateCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).UpdateCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.CardService/UpdateCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).UpdateCard(ctx, req.(*UpdateCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardService_DeleteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).DeleteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.CardService/DeleteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).DeleteCard(ctx, req.(*CardIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardService_ListUserCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).ListUserCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.CardService/ListUserCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).ListUserCards(ctx, req.(*user.UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardService_ChangeDefaultCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).ChangeDefaultCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.CardService/ChangeDefaultCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).ChangeDefaultCard(ctx, req.(*CardIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

var _CardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.emailer.com.CardService",
	HandlerType: (*CardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddCard",
			Handler:    _CardService_AddCard_Handler,
		},
		{
			MethodName: "UpdateCard",
			Handler:    _CardService_UpdateCard_Handler,
		},
		{
			MethodName: "DeleteCard",
			Handler:    _CardService_DeleteCard_Handler,
		},
		{
			MethodName: "ListUserCards",
			Handler:    _CardService_ListUserCards_Handler,
		},
		{
			MethodName: "ChangeDefaultCard",
			Handler:    _CardService_ChangeDefaultCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "card/card.proto",
}
