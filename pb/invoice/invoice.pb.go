// Code generated by protoc-gen-go. DO NOT EDIT.
// source: invoice/invoice.proto

package invoice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/lyft/protoc-gen-validate/validate"
	_ "go.emailer.com/pb/emailer"
	membership "go.emailer.com/pb/membership"
	user "go.emailer.com/pb/user"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Invoice struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Membership           *membership.Membership `protobuf:"bytes,3,opt,name=membership,proto3" json:"membership,omitempty"`
	Address              *user.Address          `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	UserProfile          *user.UserProfile      `protobuf:"bytes,5,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	InvoiceStart         *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=invoice_start,json=invoiceStart,proto3" json:"invoice_start,omitempty"`
	InvoiceEnd           *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=invoice_end,json=invoiceEnd,proto3" json:"invoice_end,omitempty"`
	GeneratedOn          *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=generated_on,json=generatedOn,proto3" json:"generated_on,omitempty"`
	Paid                 bool                   `protobuf:"varint,9,opt,name=paid,proto3" json:"paid,omitempty"`
	Failed               bool                   `protobuf:"varint,10,opt,name=failed,proto3" json:"failed,omitempty"`
	FailedReason         string                 `protobuf:"bytes,11,opt,name=failed_reason,json=failedReason,proto3" json:"failed_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3e2b5ce0fcadd51, []int{0}
}

func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (m *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(m, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Invoice) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Invoice) GetMembership() *membership.Membership {
	if m != nil {
		return m.Membership
	}
	return nil
}

func (m *Invoice) GetAddress() *user.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Invoice) GetUserProfile() *user.UserProfile {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

func (m *Invoice) GetInvoiceStart() *timestamp.Timestamp {
	if m != nil {
		return m.InvoiceStart
	}
	return nil
}

func (m *Invoice) GetInvoiceEnd() *timestamp.Timestamp {
	if m != nil {
		return m.InvoiceEnd
	}
	return nil
}

func (m *Invoice) GetGeneratedOn() *timestamp.Timestamp {
	if m != nil {
		return m.GeneratedOn
	}
	return nil
}

func (m *Invoice) GetPaid() bool {
	if m != nil {
		return m.Paid
	}
	return false
}

func (m *Invoice) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *Invoice) GetFailedReason() string {
	if m != nil {
		return m.FailedReason
	}
	return ""
}

type InvoiceList struct {
	Invoices             []*Invoice `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
	Total                int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *InvoiceList) Reset()         { *m = InvoiceList{} }
func (m *InvoiceList) String() string { return proto.CompactTextString(m) }
func (*InvoiceList) ProtoMessage()    {}
func (*InvoiceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3e2b5ce0fcadd51, []int{1}
}

func (m *InvoiceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceList.Unmarshal(m, b)
}
func (m *InvoiceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceList.Marshal(b, m, deterministic)
}
func (m *InvoiceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceList.Merge(m, src)
}
func (m *InvoiceList) XXX_Size() int {
	return xxx_messageInfo_InvoiceList.Size(m)
}
func (m *InvoiceList) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceList.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceList proto.InternalMessageInfo

func (m *InvoiceList) GetInvoices() []*Invoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *InvoiceList) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetInvoicesRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInvoicesRequest) Reset()         { *m = GetInvoicesRequest{} }
func (m *GetInvoicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetInvoicesRequest) ProtoMessage()    {}
func (*GetInvoicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3e2b5ce0fcadd51, []int{2}
}

func (m *GetInvoicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInvoicesRequest.Unmarshal(m, b)
}
func (m *GetInvoicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInvoicesRequest.Marshal(b, m, deterministic)
}
func (m *GetInvoicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInvoicesRequest.Merge(m, src)
}
func (m *GetInvoicesRequest) XXX_Size() int {
	return xxx_messageInfo_GetInvoicesRequest.Size(m)
}
func (m *GetInvoicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInvoicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInvoicesRequest proto.InternalMessageInfo

func (m *GetInvoicesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetInvoicesRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetInvoicesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*Invoice)(nil), "go.emailer.com.Invoice")
	proto.RegisterType((*InvoiceList)(nil), "go.emailer.com.InvoiceList")
	proto.RegisterType((*GetInvoicesRequest)(nil), "go.emailer.com.GetInvoicesRequest")
}

func init() { proto.RegisterFile("invoice/invoice.proto", fileDescriptor_b3e2b5ce0fcadd51) }

var fileDescriptor_b3e2b5ce0fcadd51 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0xf3, 0x70, 0xd2, 0xeb, 0xb4, 0xa0, 0x11, 0xb4, 0x43, 0x22, 0x41, 0x14, 0x36, 0x5d,
	0xd9, 0x55, 0xbb, 0x02, 0x84, 0x10, 0x91, 0x00, 0x45, 0xa2, 0x80, 0x5c, 0x2a, 0x21, 0x36, 0x91,
	0x93, 0xb9, 0x4e, 0x47, 0xd8, 0x1e, 0x33, 0x33, 0xc9, 0x07, 0xf0, 0x0d, 0xfc, 0x07, 0x7b, 0x56,
	0xfc, 0x4e, 0xf8, 0x02, 0xc4, 0x0a, 0x79, 0x3c, 0x76, 0xda, 0xd0, 0xaa, 0x9b, 0xe4, 0x3e, 0xce,
	0xb9, 0x8f, 0xb9, 0x27, 0x81, 0xfb, 0x3c, 0x5b, 0x09, 0x3e, 0xc7, 0xc0, 0x7e, 0xfb, 0xb9, 0x14,
	0x5a, 0x90, 0xbd, 0x85, 0xf0, 0x31, 0x8d, 0x78, 0x82, 0xd2, 0x9f, 0x8b, 0xb4, 0xff, 0x68, 0x21,
	0xc4, 0x22, 0xc1, 0xc0, 0x64, 0x67, 0xcb, 0x38, 0xd0, 0x3c, 0x45, 0xa5, 0xa3, 0x34, 0x2f, 0x09,
	0xfd, 0x41, 0x8a, 0xe9, 0x0c, 0xa5, 0xba, 0xe0, 0x79, 0xb0, 0x31, 0x6d, 0xf2, 0xce, 0x52, 0xa1,
	0x0c, 0x8a, 0x0f, 0x1b, 0x38, 0x58, 0x45, 0x09, 0x67, 0x91, 0xc6, 0xa0, 0x32, 0x6c, 0xc2, 0x9b,
	0x5f, 0x44, 0x5f, 0x96, 0xa5, 0x33, 0xfa, 0xde, 0x82, 0xce, 0xa4, 0x1c, 0x8b, 0xec, 0x41, 0x83,
	0x33, 0xea, 0x0c, 0x9d, 0xc3, 0x9d, 0xb0, 0xc1, 0x19, 0x39, 0x80, 0x4e, 0x51, 0x6f, 0xca, 0x19,
	0x6d, 0x98, 0xa0, 0x5b, 0xb8, 0x13, 0x46, 0xc6, 0x00, 0x9b, 0xfe, 0xb4, 0x39, 0x74, 0x0e, 0xbd,
	0xe3, 0xbe, 0x7f, 0x75, 0x1d, 0xff, 0xb4, 0x46, 0x8c, 0xdd, 0xbf, 0xeb, 0xa3, 0x46, 0xd7, 0x09,
	0x2f, 0xb1, 0xc8, 0x13, 0xe8, 0x44, 0x8c, 0x49, 0x54, 0x8a, 0xb6, 0x4c, 0x81, 0x83, 0xed, 0x02,
	0x2f, 0xcb, 0x74, 0xcd, 0xae, 0xf0, 0xe4, 0x35, 0xf4, 0xcc, 0x5c, 0xb9, 0x14, 0x31, 0x4f, 0x90,
	0xb6, 0x0d, 0x7f, 0xb0, 0xcd, 0x3f, 0x57, 0x28, 0x3f, 0x94, 0x90, 0xba, 0x86, 0xb7, 0xdc, 0x04,
	0xc9, 0x0b, 0xd8, 0xb5, 0x17, 0x99, 0x2a, 0x1d, 0x49, 0x4d, 0xdd, 0x7a, 0x93, 0xe2, 0x10, 0x7e,
	0x75, 0x08, 0xff, 0x63, 0x75, 0x88, 0xb0, 0x67, 0x09, 0x67, 0x05, 0x9e, 0x3c, 0x03, 0xaf, 0x2a,
	0x80, 0x19, 0xa3, 0x9d, 0x5b, 0xe9, 0x60, 0xe1, 0xaf, 0x32, 0x46, 0x9e, 0x43, 0x6f, 0x81, 0x19,
	0xca, 0x48, 0x23, 0x9b, 0x8a, 0x8c, 0x76, 0x6f, 0x65, 0x7b, 0x35, 0xfe, 0x7d, 0x46, 0x08, 0xb4,
	0xf2, 0x88, 0x33, 0xba, 0x33, 0x74, 0x0e, 0xbb, 0xa1, 0xb1, 0xc9, 0x3e, 0xb8, 0x71, 0xb1, 0x3f,
	0xa3, 0x60, 0xa2, 0xd6, 0x23, 0x8f, 0x61, 0xb7, 0xb4, 0xa6, 0x12, 0x23, 0x25, 0x32, 0xea, 0x99,
	0x73, 0xf6, 0xca, 0x60, 0x68, 0x62, 0x4f, 0xbd, 0x3f, 0xeb, 0x23, 0xe7, 0xdb, 0xef, 0xa3, 0x26,
	0xcf, 0x56, 0xa3, 0x4f, 0xe0, 0x59, 0x55, 0xbc, 0xe5, 0x4a, 0x93, 0x13, 0xe8, 0xda, 0xc9, 0x15,
	0x75, 0x86, 0xcd, 0xeb, 0xae, 0x65, 0xe1, 0x61, 0x0d, 0x24, 0xf7, 0xa0, 0xad, 0x85, 0x8e, 0x12,
	0x23, 0x9e, 0x76, 0x58, 0x3a, 0xa3, 0x18, 0xc8, 0x1b, 0xd4, 0x16, 0xad, 0x42, 0xfc, 0xba, 0x44,
	0xa5, 0xc9, 0x68, 0x23, 0x35, 0xa3, 0xbf, 0xf1, 0xce, 0xcf, 0xf5, 0xaf, 0x66, 0x4b, 0x36, 0xee,
	0x3a, 0xb5, 0xea, 0xf6, 0xc1, 0x15, 0x71, 0xac, 0x50, 0xdb, 0x82, 0xd6, 0x2b, 0xfa, 0x24, 0x3c,
	0xe5, 0xda, 0x08, 0xb1, 0x1d, 0x96, 0xce, 0xf1, 0x0f, 0x07, 0xf6, 0x6c, 0x97, 0x33, 0x94, 0xab,
	0x42, 0xdf, 0xef, 0xc0, 0xbb, 0xd4, 0x9a, 0x8c, 0xb6, 0x57, 0xf8, 0x7f, 0xae, 0xfe, 0xe0, 0x86,
	0x35, 0xcd, 0xab, 0x9c, 0x9a, 0x55, 0xce, 0xf3, 0xb9, 0x48, 0x79, 0xb6, 0xa8, 0x7e, 0x45, 0x0f,
	0xaf, 0xd3, 0xe1, 0x84, 0x61, 0xa6, 0x79, 0xcc, 0x51, 0xf6, 0x6f, 0x7a, 0xb9, 0xf1, 0xe0, 0xf3,
	0x83, 0xab, 0x99, 0x20, 0x9f, 0x55, 0x7f, 0x19, 0x33, 0xd7, 0xe8, 0xe1, 0xe4, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x8b, 0xb3, 0x35, 0x73, 0x4c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InvoiceServiceClient is the client API for InvoiceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InvoiceServiceClient interface {
	GetInvoices(ctx context.Context, in *GetInvoicesRequest, opts ...grpc.CallOption) (*InvoiceList, error)
	GetUpcomingInvoice(ctx context.Context, in *user.UserIdentifier, opts ...grpc.CallOption) (*Invoice, error)
}

type invoiceServiceClient struct {
	cc *grpc.ClientConn
}

func NewInvoiceServiceClient(cc *grpc.ClientConn) InvoiceServiceClient {
	return &invoiceServiceClient{cc}
}

func (c *invoiceServiceClient) GetInvoices(ctx context.Context, in *GetInvoicesRequest, opts ...grpc.CallOption) (*InvoiceList, error) {
	out := new(InvoiceList)
	err := c.cc.Invoke(ctx, "/go.emailer.com.InvoiceService/GetInvoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceServiceClient) GetUpcomingInvoice(ctx context.Context, in *user.UserIdentifier, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/go.emailer.com.InvoiceService/GetUpcomingInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InvoiceServiceServer is the server API for InvoiceService service.
type InvoiceServiceServer interface {
	GetInvoices(context.Context, *GetInvoicesRequest) (*InvoiceList, error)
	GetUpcomingInvoice(context.Context, *user.UserIdentifier) (*Invoice, error)
}

func RegisterInvoiceServiceServer(s *grpc.Server, srv InvoiceServiceServer) {
	s.RegisterService(&_InvoiceService_serviceDesc, srv)
}

func _InvoiceService_GetInvoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceServiceServer).GetInvoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.InvoiceService/GetInvoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceServiceServer).GetInvoices(ctx, req.(*GetInvoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceService_GetUpcomingInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(user.UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceServiceServer).GetUpcomingInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.InvoiceService/GetUpcomingInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceServiceServer).GetUpcomingInvoice(ctx, req.(*user.UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

var _InvoiceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.emailer.com.InvoiceService",
	HandlerType: (*InvoiceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInvoices",
			Handler:    _InvoiceService_GetInvoices_Handler,
		},
		{
			MethodName: "GetUpcomingInvoice",
			Handler:    _InvoiceService_GetUpcomingInvoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "invoice/invoice.proto",
}
