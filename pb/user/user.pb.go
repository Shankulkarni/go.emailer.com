// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/lyft/protoc-gen-validate/validate"
	_ "go.emailer.com/pb/emailer"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserProfile struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	ContactNumber        string   `protobuf:"bytes,5,opt,name=contact_number,json=contactNumber,proto3" json:"contact_number,omitempty"`
	Address              *Address `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserProfile) Reset()         { *m = UserProfile{} }
func (m *UserProfile) String() string { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()    {}
func (*UserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{0}
}

func (m *UserProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserProfile.Unmarshal(m, b)
}
func (m *UserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserProfile.Marshal(b, m, deterministic)
}
func (m *UserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserProfile.Merge(m, src)
}
func (m *UserProfile) XXX_Size() int {
	return xxx_messageInfo_UserProfile.Size(m)
}
func (m *UserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_UserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfile proto.InternalMessageInfo

func (m *UserProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserProfile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UserProfile) GetContactNumber() string {
	if m != nil {
		return m.ContactNumber
	}
	return ""
}

func (m *UserProfile) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type UserIdentifier struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIdentifier) Reset()         { *m = UserIdentifier{} }
func (m *UserIdentifier) String() string { return proto.CompactTextString(m) }
func (*UserIdentifier) ProtoMessage()    {}
func (*UserIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{1}
}

func (m *UserIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdentifier.Unmarshal(m, b)
}
func (m *UserIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdentifier.Marshal(b, m, deterministic)
}
func (m *UserIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdentifier.Merge(m, src)
}
func (m *UserIdentifier) XXX_Size() int {
	return xxx_messageInfo_UserIdentifier.Size(m)
}
func (m *UserIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdentifier proto.InternalMessageInfo

func (m *UserIdentifier) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Street               string   `protobuf:"bytes,2,opt,name=street,proto3" json:"street,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Country              string   `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	ZipCode              string   `protobuf:"bytes,6,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{2}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

type UserLogin struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLogin) Reset()         { *m = UserLogin{} }
func (m *UserLogin) String() string { return proto.CompactTextString(m) }
func (*UserLogin) ProtoMessage()    {}
func (*UserLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{3}
}

func (m *UserLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLogin.Unmarshal(m, b)
}
func (m *UserLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLogin.Marshal(b, m, deterministic)
}
func (m *UserLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLogin.Merge(m, src)
}
func (m *UserLogin) XXX_Size() int {
	return xxx_messageInfo_UserLogin.Size(m)
}
func (m *UserLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLogin.DiscardUnknown(m)
}

var xxx_messageInfo_UserLogin proto.InternalMessageInfo

func (m *UserLogin) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserLogin) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserLoginResponse struct {
	LoginStatus          bool     `protobuf:"varint,1,opt,name=login_status,json=loginStatus,proto3" json:"login_status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginResponse) Reset()         { *m = UserLoginResponse{} }
func (m *UserLoginResponse) String() string { return proto.CompactTextString(m) }
func (*UserLoginResponse) ProtoMessage()    {}
func (*UserLoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{4}
}

func (m *UserLoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginResponse.Unmarshal(m, b)
}
func (m *UserLoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginResponse.Marshal(b, m, deterministic)
}
func (m *UserLoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginResponse.Merge(m, src)
}
func (m *UserLoginResponse) XXX_Size() int {
	return xxx_messageInfo_UserLoginResponse.Size(m)
}
func (m *UserLoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginResponse proto.InternalMessageInfo

func (m *UserLoginResponse) GetLoginStatus() bool {
	if m != nil {
		return m.LoginStatus
	}
	return false
}

func (m *UserLoginResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChangePasswordRequest struct {
	OldPassword          string   `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{5}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ChangePasswordResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordResponse) Reset()         { *m = ChangePasswordResponse{} }
func (m *ChangePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordResponse) ProtoMessage()    {}
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{6}
}

func (m *ChangePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordResponse.Unmarshal(m, b)
}
func (m *ChangePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordResponse.Marshal(b, m, deterministic)
}
func (m *ChangePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordResponse.Merge(m, src)
}
func (m *ChangePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordResponse.Size(m)
}
func (m *ChangePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordResponse proto.InternalMessageInfo

func (m *ChangePasswordResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *ChangePasswordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ForgetPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgetPasswordRequest) Reset()         { *m = ForgetPasswordRequest{} }
func (m *ForgetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ForgetPasswordRequest) ProtoMessage()    {}
func (*ForgetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{7}
}

func (m *ForgetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgetPasswordRequest.Unmarshal(m, b)
}
func (m *ForgetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ForgetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgetPasswordRequest.Merge(m, src)
}
func (m *ForgetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ForgetPasswordRequest.Size(m)
}
func (m *ForgetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForgetPasswordRequest proto.InternalMessageInfo

func (m *ForgetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ResetPasswordRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{8}
}

func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(m, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ResetPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *ResetPasswordRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UserLastLoginList struct {
	LastLogins           []*UserLastLogins `protobuf:"bytes,1,rep,name=last_logins,json=lastLogins,proto3" json:"last_logins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserLastLoginList) Reset()         { *m = UserLastLoginList{} }
func (m *UserLastLoginList) String() string { return proto.CompactTextString(m) }
func (*UserLastLoginList) ProtoMessage()    {}
func (*UserLastLoginList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{9}
}

func (m *UserLastLoginList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLastLoginList.Unmarshal(m, b)
}
func (m *UserLastLoginList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLastLoginList.Marshal(b, m, deterministic)
}
func (m *UserLastLoginList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLastLoginList.Merge(m, src)
}
func (m *UserLastLoginList) XXX_Size() int {
	return xxx_messageInfo_UserLastLoginList.Size(m)
}
func (m *UserLastLoginList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLastLoginList.DiscardUnknown(m)
}

var xxx_messageInfo_UserLastLoginList proto.InternalMessageInfo

func (m *UserLastLoginList) GetLastLogins() []*UserLastLogins {
	if m != nil {
		return m.LastLogins
	}
	return nil
}

type UserLastLogins struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                   string               `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Browser              string               `protobuf:"bytes,3,opt,name=browser,proto3" json:"browser,omitempty"`
	Device               string               `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserLastLogins) Reset()         { *m = UserLastLogins{} }
func (m *UserLastLogins) String() string { return proto.CompactTextString(m) }
func (*UserLastLogins) ProtoMessage()    {}
func (*UserLastLogins) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{10}
}

func (m *UserLastLogins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLastLogins.Unmarshal(m, b)
}
func (m *UserLastLogins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLastLogins.Marshal(b, m, deterministic)
}
func (m *UserLastLogins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLastLogins.Merge(m, src)
}
func (m *UserLastLogins) XXX_Size() int {
	return xxx_messageInfo_UserLastLogins.Size(m)
}
func (m *UserLastLogins) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLastLogins.DiscardUnknown(m)
}

var xxx_messageInfo_UserLastLogins proto.InternalMessageInfo

func (m *UserLastLogins) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserLastLogins) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UserLastLogins) GetBrowser() string {
	if m != nil {
		return m.Browser
	}
	return ""
}

func (m *UserLastLogins) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *UserLastLogins) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type UserApiToken struct {
	Token                string               `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	GeneratedOn          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=generated_on,json=generatedOn,proto3" json:"generated_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserApiToken) Reset()         { *m = UserApiToken{} }
func (m *UserApiToken) String() string { return proto.CompactTextString(m) }
func (*UserApiToken) ProtoMessage()    {}
func (*UserApiToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{11}
}

func (m *UserApiToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserApiToken.Unmarshal(m, b)
}
func (m *UserApiToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserApiToken.Marshal(b, m, deterministic)
}
func (m *UserApiToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserApiToken.Merge(m, src)
}
func (m *UserApiToken) XXX_Size() int {
	return xxx_messageInfo_UserApiToken.Size(m)
}
func (m *UserApiToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserApiToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserApiToken proto.InternalMessageInfo

func (m *UserApiToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserApiToken) GetGeneratedOn() *timestamp.Timestamp {
	if m != nil {
		return m.GeneratedOn
	}
	return nil
}

func init() {
	proto.RegisterType((*UserProfile)(nil), "go.emailer.com.UserProfile")
	proto.RegisterType((*UserIdentifier)(nil), "go.emailer.com.UserIdentifier")
	proto.RegisterType((*Address)(nil), "go.emailer.com.Address")
	proto.RegisterType((*UserLogin)(nil), "go.emailer.com.UserLogin")
	proto.RegisterType((*UserLoginResponse)(nil), "go.emailer.com.UserLoginResponse")
	proto.RegisterType((*ChangePasswordRequest)(nil), "go.emailer.com.ChangePasswordRequest")
	proto.RegisterType((*ChangePasswordResponse)(nil), "go.emailer.com.ChangePasswordResponse")
	proto.RegisterType((*ForgetPasswordRequest)(nil), "go.emailer.com.ForgetPasswordRequest")
	proto.RegisterType((*ResetPasswordRequest)(nil), "go.emailer.com.ResetPasswordRequest")
	proto.RegisterType((*UserLastLoginList)(nil), "go.emailer.com.UserLastLoginList")
	proto.RegisterType((*UserLastLogins)(nil), "go.emailer.com.UserLastLogins")
	proto.RegisterType((*UserApiToken)(nil), "go.emailer.com.UserApiToken")
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor_ed89022014131a74) }

var fileDescriptor_ed89022014131a74 = []byte{
	// 906 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0x69, 0xfe, 0x3e, 0x67, 0x43, 0x19, 0xed, 0x76, 0xb3, 0x29, 0xb0, 0xad, 0xb5, 0x5d,
	0xf5, 0x80, 0x92, 0xaa, 0x5c, 0x00, 0x09, 0xa1, 0xed, 0x8a, 0x76, 0x81, 0xa5, 0x5b, 0xb9, 0x5d,
	0x90, 0xb8, 0x18, 0xc7, 0x7e, 0xf5, 0x8e, 0xea, 0x78, 0xcc, 0xcc, 0xb8, 0x55, 0xf7, 0xc8, 0x85,
	0x3b, 0x17, 0xbe, 0x09, 0x07, 0x4e, 0x1c, 0xf9, 0x14, 0xdc, 0xcb, 0x27, 0x40, 0x3d, 0xa1, 0x19,
	0x8f, 0x1d, 0xe2, 0x26, 0x29, 0x12, 0x70, 0x89, 0xe6, 0xfd, 0x9d, 0xf7, 0x7e, 0x6f, 0x7e, 0xcf,
	0x81, 0x37, 0x33, 0x81, 0x7c, 0xa4, 0x7e, 0x86, 0x29, 0x67, 0x92, 0x91, 0x5e, 0xc4, 0x86, 0x38,
	0xf1, 0x69, 0x8c, 0x7c, 0x18, 0xb0, 0xc9, 0xe0, 0xfe, 0xb9, 0x1f, 0xd3, 0xd0, 0x97, 0x38, 0x2a,
	0x0e, 0xb9, 0xe3, 0x60, 0x3d, 0x62, 0x2c, 0x8a, 0x71, 0xa4, 0xa5, 0x71, 0x76, 0x3a, 0xc2, 0x49,
	0x2a, 0x2f, 0x8d, 0xf1, 0x61, 0xd5, 0x28, 0xe9, 0x04, 0x85, 0xf4, 0x27, 0xa9, 0x71, 0xb0, 0x83,
	0x57, 0xfe, 0x59, 0x96, 0x0b, 0xce, 0xef, 0x16, 0xd8, 0x2f, 0x05, 0xf2, 0x23, 0xce, 0x4e, 0x69,
	0x8c, 0xa4, 0x07, 0x35, 0x1a, 0xf6, 0xad, 0x0d, 0x6b, 0xbb, 0xe3, 0xd6, 0x68, 0x48, 0x1e, 0x42,
	0x43, 0x97, 0xd4, 0xaf, 0x29, 0xd5, 0x5e, 0xe7, 0x97, 0xab, 0x5f, 0x57, 0xea, 0xbc, 0xf6, 0xad,
	0xe5, 0xe6, 0x7a, 0x42, 0xa0, 0x9e, 0xf8, 0x13, 0xec, 0xaf, 0xe8, 0x10, 0x7d, 0x26, 0xeb, 0xd0,
	0x89, 0x7d, 0x21, 0x3d, 0x6d, 0xa8, 0x6b, 0x43, 0x5b, 0x29, 0x0e, 0x95, 0x71, 0x0b, 0x7a, 0x01,
	0x4b, 0xa4, 0x1f, 0x48, 0x2f, 0xc9, 0x26, 0x63, 0xe4, 0xfd, 0x86, 0xf6, 0xb8, 0x63, 0xb4, 0x87,
	0x5a, 0x49, 0x3e, 0x84, 0x96, 0x1f, 0x86, 0x1c, 0x85, 0xe8, 0x37, 0x37, 0xac, 0x6d, 0x7b, 0xf7,
	0xfe, 0x70, 0x16, 0x9e, 0xe1, 0x93, 0xdc, 0xbc, 0xd7, 0xbc, 0xbe, 0xda, 0xa9, 0xb5, 0x2d, 0xb7,
	0xf0, 0xff, 0xc8, 0xfe, 0xf3, 0x6a, 0xc7, 0xfa, 0xfe, 0x8f, 0x9d, 0x95, 0x4c, 0x70, 0x67, 0x03,
	0x7a, 0xaa, 0xbf, 0xcf, 0x42, 0x4c, 0x24, 0x3d, 0xa5, 0xc8, 0xab, 0x2d, 0x3a, 0x3f, 0x5b, 0xd0,
	0x32, 0xb9, 0xc8, 0xe3, 0xe9, 0xad, 0xda, 0x61, 0xaf, 0xab, 0x1a, 0x6e, 0xf1, 0xc6, 0xea, 0x1b,
	0xfd, 0xdf, 0xa6, 0x57, 0x90, 0x47, 0xd0, 0x14, 0x92, 0x23, 0x4a, 0x83, 0xcb, 0xac, 0x9b, 0xb1,
	0x29, 0x6c, 0x02, 0x2a, 0x2f, 0x0b, 0x6c, 0xd4, 0x99, 0xdc, 0x85, 0x86, 0x90, 0xbe, 0x2c, 0x70,
	0xc9, 0x05, 0xd2, 0x87, 0x56, 0xc0, 0xb2, 0x44, 0xf2, 0x4b, 0x83, 0x46, 0x21, 0x92, 0x07, 0xd0,
	0x7e, 0x4d, 0x53, 0x2f, 0x60, 0x21, 0x6a, 0x20, 0x3a, 0x6e, 0xeb, 0x35, 0x4d, 0x9f, 0xb2, 0x10,
	0x9d, 0x63, 0xe8, 0xa8, 0xd6, 0x9e, 0xb3, 0x88, 0x26, 0xd3, 0x41, 0x59, 0x0b, 0x06, 0xb5, 0x05,
	0xed, 0xd4, 0x17, 0xe2, 0x82, 0xf1, 0xb0, 0x32, 0xcc, 0xd5, 0xa6, 0x5b, 0x9a, 0x9c, 0x23, 0x78,
	0xab, 0x4c, 0xea, 0xa2, 0x48, 0x59, 0x22, 0x90, 0x6c, 0x42, 0x37, 0x56, 0x0a, 0x4f, 0x55, 0x9b,
	0xe5, 0xd8, 0xb4, 0x5d, 0x5b, 0xeb, 0x8e, 0xb5, 0x4a, 0x75, 0x30, 0x41, 0x21, 0xfc, 0x08, 0xf3,
	0xec, 0x6e, 0x21, 0x3a, 0x3f, 0x59, 0x70, 0xef, 0xe9, 0x2b, 0x3f, 0x89, 0xf0, 0xc8, 0x5c, 0xe2,
	0xe2, 0x77, 0x19, 0x0a, 0x49, 0xde, 0x83, 0x2e, 0x8b, 0x43, 0xaf, 0x2c, 0xcb, 0xaa, 0x96, 0x65,
	0xb3, 0x38, 0x2c, 0x82, 0x94, 0x77, 0x82, 0x17, 0xde, 0xe2, 0x26, 0xec, 0x04, 0x2f, 0x4a, 0x6f,
	0x07, 0x5a, 0x8a, 0x5a, 0x1e, 0x0d, 0x73, 0xf8, 0xa7, 0x8e, 0x0d, 0xb7, 0x99, 0xe9, 0x17, 0xe1,
	0x7c, 0x0e, 0x6b, 0xd5, 0xc2, 0x4c, 0xc3, 0x6b, 0x6a, 0xbe, 0x7f, 0x6b, 0xd5, 0x48, 0x4b, 0xba,
	0xfc, 0x00, 0xee, 0xed, 0x33, 0x1e, 0xa1, 0xac, 0x36, 0x79, 0xdb, 0x60, 0x9c, 0x1f, 0x2c, 0xb8,
	0xeb, 0xa2, 0xb8, 0x19, 0xf9, 0x0e, 0xd4, 0xf5, 0xd8, 0x2b, 0xb0, 0xd4, 0x5d, 0xad, 0xfe, 0x1f,
	0xf0, 0x38, 0x31, 0xb3, 0xf7, 0x85, 0xd4, 0xf3, 0x7f, 0x4e, 0x85, 0x24, 0x9f, 0x80, 0xad, 0xc9,
	0xac, 0x87, 0xad, 0xf0, 0x58, 0xd9, 0xb6, 0x77, 0xdf, 0xad, 0x92, 0x71, 0x26, 0x4e, 0xb8, 0x10,
	0x97, 0x67, 0xe7, 0x47, 0x2b, 0xa7, 0xe0, 0xd4, 0x7c, 0x63, 0xcb, 0x28, 0x39, 0x35, 0x88, 0xd6,
	0x68, 0xaa, 0x60, 0x1e, 0x73, 0x76, 0x21, 0x90, 0x1b, 0xee, 0x14, 0xa2, 0x1a, 0x4c, 0x88, 0xe7,
	0x34, 0x28, 0xf8, 0x63, 0x24, 0x32, 0x84, 0xba, 0xda, 0x73, 0x9a, 0x3d, 0xf6, 0xee, 0x60, 0x98,
	0x2f, 0xc1, 0x61, 0xb1, 0x04, 0x87, 0x27, 0xc5, 0x12, 0x74, 0xb5, 0x9f, 0x13, 0x40, 0x57, 0xd5,
	0xf4, 0x24, 0xa5, 0x27, 0xec, 0x0c, 0x13, 0x45, 0x4b, 0xa9, 0x0e, 0xa6, 0xa8, 0x5c, 0x20, 0x1f,
	0x43, 0x37, 0xc2, 0x04, 0xb9, 0x2f, 0x31, 0xf4, 0x58, 0xa2, 0x2b, 0x5c, 0x9e, 0xdd, 0x2e, 0xfd,
	0x5f, 0x24, 0xbb, 0xd7, 0xcd, 0x7c, 0xb9, 0x1e, 0x23, 0xd7, 0x45, 0xee, 0x43, 0xeb, 0x00, 0xa5,
	0xd2, 0x90, 0xb9, 0x00, 0x4e, 0x97, 0xd4, 0x60, 0x7d, 0x9e, 0xbd, 0x58, 0xd2, 0x87, 0xd0, 0xfb,
	0x0a, 0x39, 0x3d, 0xbd, 0x2c, 0xa7, 0xfb, 0x60, 0xee, 0x3c, 0x14, 0xd8, 0x83, 0xcd, 0x85, 0xa6,
	0xf2, 0xb5, 0x3f, 0x83, 0xae, 0x8b, 0x11, 0x15, 0x12, 0xb9, 0x2e, 0x6e, 0xd9, 0xe5, 0xcb, 0x2b,
	0xdb, 0x07, 0x78, 0x99, 0xaa, 0x2f, 0xd5, 0xbf, 0xcc, 0xe3, 0x41, 0x6f, 0x96, 0x99, 0x64, 0xab,
	0xea, 0x3e, 0x77, 0xa5, 0x0c, 0x1e, 0xdf, 0xe6, 0x66, 0x5a, 0x7e, 0x01, 0xbd, 0x59, 0xba, 0xde,
	0xbc, 0x60, 0x2e, 0x9d, 0x07, 0x6b, 0x37, 0x86, 0xff, 0xa9, 0xfa, 0xf8, 0x92, 0x2f, 0xe1, 0xce,
	0x0c, 0x89, 0xc9, 0xa3, 0x6a, 0xbe, 0x79, 0x1c, 0x5f, 0x98, 0xee, 0x6b, 0x20, 0x8a, 0x7d, 0x15,
	0xde, 0xdc, 0xf6, 0x6a, 0x36, 0x97, 0xd2, 0x52, 0xd3, 0xf9, 0x0b, 0xb0, 0x0f, 0x50, 0x96, 0xef,
	0xfe, 0xb6, 0x8c, 0x6f, 0xcf, 0xb3, 0x97, 0xd1, 0x47, 0xb0, 0x7a, 0x60, 0xde, 0xfb, 0x7f, 0x94,
	0xf1, 0x19, 0xf4, 0x5c, 0x3c, 0x67, 0x67, 0xff, 0x3c, 0xdf, 0x02, 0x04, 0xf7, 0xfa, 0xdf, 0xac,
	0xcd, 0x06, 0x8e, 0xd2, 0xb1, 0xfe, 0xb7, 0x35, 0x6e, 0x6a, 0xcf, 0xf7, 0xff, 0x0a, 0x00, 0x00,
	0xff, 0xff, 0x55, 0x92, 0x8f, 0x34, 0x81, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUser(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserProfile, error)
	VerifyPassword(ctx context.Context, in *UserLogin, opts ...grpc.CallOption) (*UserLoginResponse, error)
	RegisterUser(ctx context.Context, in *UserProfile, opts ...grpc.CallOption) (*UserProfile, error)
	UpdateUser(ctx context.Context, in *UserProfile, opts ...grpc.CallOption) (*UserProfile, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error)
	ForgetPassword(ctx context.Context, in *ForgetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListUserLastLogins(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserLastLoginList, error)
	GetApiToken(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserApiToken, error)
	GenerateApiToken(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserApiToken, error)
	RevokeApiToken(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserProfile, error) {
	out := new(UserProfile)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) VerifyPassword(ctx context.Context, in *UserLogin, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	out := new(UserLoginResponse)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/VerifyPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RegisterUser(ctx context.Context, in *UserProfile, opts ...grpc.CallOption) (*UserProfile, error) {
	out := new(UserProfile)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UserProfile, opts ...grpc.CallOption) (*UserProfile, error) {
	out := new(UserProfile)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error) {
	out := new(ChangePasswordResponse)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ForgetPassword(ctx context.Context, in *ForgetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/ForgetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUserLastLogins(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserLastLoginList, error) {
	out := new(UserLastLoginList)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/ListUserLastLogins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetApiToken(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserApiToken, error) {
	out := new(UserApiToken)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/GetApiToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GenerateApiToken(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*UserApiToken, error) {
	out := new(UserApiToken)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/GenerateApiToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RevokeApiToken(ctx context.Context, in *UserIdentifier, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/go.emailer.com.UserService/RevokeApiToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUser(context.Context, *UserIdentifier) (*UserProfile, error)
	VerifyPassword(context.Context, *UserLogin) (*UserLoginResponse, error)
	RegisterUser(context.Context, *UserProfile) (*UserProfile, error)
	UpdateUser(context.Context, *UserProfile) (*UserProfile, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*ChangePasswordResponse, error)
	ForgetPassword(context.Context, *ForgetPasswordRequest) (*empty.Empty, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*empty.Empty, error)
	ListUserLastLogins(context.Context, *UserIdentifier) (*UserLastLoginList, error)
	GetApiToken(context.Context, *UserIdentifier) (*UserApiToken, error)
	GenerateApiToken(context.Context, *UserIdentifier) (*UserApiToken, error)
	RevokeApiToken(context.Context, *UserIdentifier) (*empty.Empty, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_VerifyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).VerifyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/VerifyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).VerifyPassword(ctx, req.(*UserLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RegisterUser(ctx, req.(*UserProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UserProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ForgetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ForgetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/ForgetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ForgetPassword(ctx, req.(*ForgetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUserLastLogins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListUserLastLogins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/ListUserLastLogins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListUserLastLogins(ctx, req.(*UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetApiToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetApiToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/GetApiToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetApiToken(ctx, req.(*UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GenerateApiToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GenerateApiToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/GenerateApiToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GenerateApiToken(ctx, req.(*UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RevokeApiToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RevokeApiToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.emailer.com.UserService/RevokeApiToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RevokeApiToken(ctx, req.(*UserIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.emailer.com.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "VerifyPassword",
			Handler:    _UserService_VerifyPassword_Handler,
		},
		{
			MethodName: "RegisterUser",
			Handler:    _UserService_RegisterUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserService_ChangePassword_Handler,
		},
		{
			MethodName: "ForgetPassword",
			Handler:    _UserService_ForgetPassword_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _UserService_ResetPassword_Handler,
		},
		{
			MethodName: "ListUserLastLogins",
			Handler:    _UserService_ListUserLastLogins_Handler,
		},
		{
			MethodName: "GetApiToken",
			Handler:    _UserService_GetApiToken_Handler,
		},
		{
			MethodName: "GenerateApiToken",
			Handler:    _UserService_GenerateApiToken_Handler,
		},
		{
			MethodName: "RevokeApiToken",
			Handler:    _UserService_RevokeApiToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}
